// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AccountInvalidation extends ethereum.Event {
  get params(): AccountInvalidation__Params {
    return new AccountInvalidation__Params(this);
  }
}

export class AccountInvalidation__Params {
  _event: AccountInvalidation;

  constructor(event: AccountInvalidation) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get RBBId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get CNPJ(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get responsible(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get reason(): i32 {
    return this._event.parameters[4].value.toI32();
  }
}

export class AccountPaused extends ethereum.Event {
  get params(): AccountPaused__Params {
    return new AccountPaused__Params(this);
  }
}

export class AccountPaused__Params {
  _event: AccountPaused;

  constructor(event: AccountPaused) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get RBBId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get CNPJ(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get responsible(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get reason(): i32 {
    return this._event.parameters[4].value.toI32();
  }
}

export class AccountReactivation extends ethereum.Event {
  get params(): AccountReactivation__Params {
    return new AccountReactivation__Params(this);
  }
}

export class AccountReactivation__Params {
  _event: AccountReactivation;

  constructor(event: AccountReactivation) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get hashProof(): string {
    return this._event.parameters[1].value.toString();
  }

  get dateTimeExpiration(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class AccountRegistration extends ethereum.Event {
  get params(): AccountRegistration__Params {
    return new AccountRegistration__Params(this);
  }
}

export class AccountRegistration__Params {
  _event: AccountRegistration;

  constructor(event: AccountRegistration) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get RBBId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get CNPJ(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get hashProof(): string {
    return this._event.parameters[3].value.toString();
  }

  get dateTimeExpiration(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class AccountRoleChange extends ethereum.Event {
  get params(): AccountRoleChange__Params {
    return new AccountRoleChange__Params(this);
  }
}

export class AccountRoleChange__Params {
  _event: AccountRoleChange;

  constructor(event: AccountRoleChange) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get RBBId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get CNPJ(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get responsible(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get roleBefore(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get roleNew(): i32 {
    return this._event.parameters[5].value.toI32();
  }
}

export class AccountUnpaused extends ethereum.Event {
  get params(): AccountUnpaused__Params {
    return new AccountUnpaused__Params(this);
  }
}

export class AccountUnpaused__Params {
  _event: AccountUnpaused;

  constructor(event: AccountUnpaused) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get RBBId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get CNPJ(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get responsible(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get reason(): i32 {
    return this._event.parameters[4].value.toI32();
  }
}

export class AccountValidation extends ethereum.Event {
  get params(): AccountValidation__Params {
    return new AccountValidation__Params(this);
  }
}

export class AccountValidation__Params {
  _event: AccountValidation;

  constructor(event: AccountValidation) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get RBBId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get CNPJ(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get responsible(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class AccountWaitingApproval extends ethereum.Event {
  get params(): AccountWaitingApproval__Params {
    return new AccountWaitingApproval__Params(this);
  }
}

export class AccountWaitingApproval__Params {
  _event: AccountWaitingApproval;

  constructor(event: AccountWaitingApproval) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get RBBId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get CNPJ(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get responsible(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class AccountWaitingRejection extends ethereum.Event {
  get params(): AccountWaitingRejection__Params {
    return new AccountWaitingRejection__Params(this);
  }
}

export class AccountWaitingRejection__Params {
  _event: AccountWaitingRejection;

  constructor(event: AccountWaitingRejection) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get RBBId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get CNPJ(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get responsible(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RegistryExpirationChange extends ethereum.Event {
  get params(): RegistryExpirationChange__Params {
    return new RegistryExpirationChange__Params(this);
  }
}

export class RegistryExpirationChange__Params {
  _event: RegistryExpirationChange;

  constructor(event: RegistryExpirationChange) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get dateTimeExpirationBefore(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get dateTimeExpirationNew(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RoleDefinitionActingAfterMonitoring extends ethereum.Event {
  get params(): RoleDefinitionActingAfterMonitoring__Params {
    return new RoleDefinitionActingAfterMonitoring__Params(this);
  }
}

export class RoleDefinitionActingAfterMonitoring__Params {
  _event: RoleDefinitionActingAfterMonitoring;

  constructor(event: RoleDefinitionActingAfterMonitoring) {
    this._event = event;
  }

  get rs(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RoleDefinitionRegistryPreValidation extends ethereum.Event {
  get params(): RoleDefinitionRegistryPreValidation__Params {
    return new RoleDefinitionRegistryPreValidation__Params(this);
  }
}

export class RoleDefinitionRegistryPreValidation__Params {
  _event: RoleDefinitionRegistryPreValidation;

  constructor(event: RoleDefinitionRegistryPreValidation) {
    this._event = event;
  }

  get rs(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RoleDefinitionRegistryValidation extends ethereum.Event {
  get params(): RoleDefinitionRegistryValidation__Params {
    return new RoleDefinitionRegistryValidation__Params(this);
  }
}

export class RoleDefinitionRegistryValidation__Params {
  _event: RoleDefinitionRegistryValidation;

  constructor(event: RoleDefinitionRegistryValidation) {
    this._event = event;
  }

  get rs(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Contract__legalEntitiesInfoResult {
  value0: BigInt;
  value1: BigInt;
  value2: string;
  value3: i32;
  value4: i32;
  value5: boolean;
  value6: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: string,
    value3: i32,
    value4: i32,
    value5: boolean,
    value6: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    map.set(
      "value4",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value4))
    );
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    return map;
  }
}

export class Contract__getRegistryResult {
  value0: BigInt;
  value1: BigInt;
  value2: string;
  value3: BigInt;
  value4: BigInt;
  value5: boolean;
  value6: BigInt;
  value7: boolean;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: string,
    value3: BigInt,
    value4: BigInt,
    value5: boolean,
    value6: BigInt,
    value7: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromBoolean(this.value7));
    return map;
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  CNPJ_RBBId(param0: BigInt): BigInt {
    let result = super.call("CNPJ_RBBId", "CNPJ_RBBId(uint64):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBigInt();
  }

  try_CNPJ_RBBId(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("CNPJ_RBBId", "CNPJ_RBBId(uint64):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  RBBId_addresses(param0: BigInt, param1: BigInt): Address {
    let result = super.call(
      "RBBId_addresses",
      "RBBId_addresses(uint256,uint256):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toAddress();
  }

  try_RBBId_addresses(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "RBBId_addresses",
      "RBBId_addresses(uint256,uint256):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  currentRBBId(): BigInt {
    let result = super.call("currentRBBId", "currentRBBId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_currentRBBId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("currentRBBId", "currentRBBId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  defaultDeltaDateTimeExpiration(): BigInt {
    let result = super.call(
      "defaultDeltaDateTimeExpiration",
      "defaultDeltaDateTimeExpiration():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_defaultDeltaDateTimeExpiration(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "defaultDeltaDateTimeExpiration",
      "defaultDeltaDateTimeExpiration():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  legalEntitiesInfo(param0: Address): Contract__legalEntitiesInfoResult {
    let result = super.call(
      "legalEntitiesInfo",
      "legalEntitiesInfo(address):(uint256,uint64,string,uint8,uint8,bool,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new Contract__legalEntitiesInfoResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toString(),
      result[3].toI32(),
      result[4].toI32(),
      result[5].toBoolean(),
      result[6].toBigInt()
    );
  }

  try_legalEntitiesInfo(
    param0: Address
  ): ethereum.CallResult<Contract__legalEntitiesInfoResult> {
    let result = super.tryCall(
      "legalEntitiesInfo",
      "legalEntitiesInfo(address):(uint256,uint64,string,uint8,uint8,bool,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__legalEntitiesInfoResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toString(),
        value[3].toI32(),
        value[4].toI32(),
        value[5].toBoolean(),
        value[6].toBigInt()
      )
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  responsibleForActingAfterMonitoring(): Address {
    let result = super.call(
      "responsibleForActingAfterMonitoring",
      "responsibleForActingAfterMonitoring():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_responsibleForActingAfterMonitoring(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "responsibleForActingAfterMonitoring",
      "responsibleForActingAfterMonitoring():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  responsibleForRegistryPreValidation(): Address {
    let result = super.call(
      "responsibleForRegistryPreValidation",
      "responsibleForRegistryPreValidation():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_responsibleForRegistryPreValidation(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "responsibleForRegistryPreValidation",
      "responsibleForRegistryPreValidation():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  responsibleForRegistryValidation(): Address {
    let result = super.call(
      "responsibleForRegistryValidation",
      "responsibleForRegistryValidation():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_responsibleForRegistryValidation(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "responsibleForRegistryValidation",
      "responsibleForRegistryValidation():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isValidHash(str: string): boolean {
    let result = super.call("isValidHash", "isValidHash(string):(bool)", [
      ethereum.Value.fromString(str)
    ]);

    return result[0].toBoolean();
  }

  try_isValidHash(str: string): ethereum.CallResult<boolean> {
    let result = super.tryCall("isValidHash", "isValidHash(string):(bool)", [
      ethereum.Value.fromString(str)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isZeroHash(str: string): boolean {
    let result = super.call("isZeroHash", "isZeroHash(string):(bool)", [
      ethereum.Value.fromString(str)
    ]);

    return result[0].toBoolean();
  }

  try_isZeroHash(str: string): ethereum.CallResult<boolean> {
    let result = super.tryCall("isZeroHash", "isZeroHash(string):(bool)", [
      ethereum.Value.fromString(str)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isOperational(addr: Address): boolean {
    let result = super.call("isOperational", "isOperational(address):(bool)", [
      ethereum.Value.fromAddress(addr)
    ]);

    return result[0].toBoolean();
  }

  try_isOperational(addr: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isOperational",
      "isOperational(address):(bool)",
      [ethereum.Value.fromAddress(addr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isRegistryOperational(RBBId: BigInt): boolean {
    let result = super.call(
      "isRegistryOperational",
      "isRegistryOperational(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(RBBId)]
    );

    return result[0].toBoolean();
  }

  try_isRegistryOperational(RBBId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isRegistryOperational",
      "isRegistryOperational(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(RBBId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getId(addr: Address): BigInt {
    let result = super.call("getId", "getId(address):(uint256)", [
      ethereum.Value.fromAddress(addr)
    ]);

    return result[0].toBigInt();
  }

  try_getId(addr: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getId", "getId(address):(uint256)", [
      ethereum.Value.fromAddress(addr)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getIdRaw(addr: Address): BigInt {
    let result = super.call("getIdRaw", "getIdRaw(address):(uint256)", [
      ethereum.Value.fromAddress(addr)
    ]);

    return result[0].toBigInt();
  }

  try_getIdRaw(addr: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getIdRaw", "getIdRaw(address):(uint256)", [
      ethereum.Value.fromAddress(addr)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getIdFromCNPJ(cnpj: BigInt): BigInt {
    let result = super.call(
      "getIdFromCNPJ",
      "getIdFromCNPJ(uint64):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(cnpj)]
    );

    return result[0].toBigInt();
  }

  try_getIdFromCNPJ(cnpj: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getIdFromCNPJ",
      "getIdFromCNPJ(uint64):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(cnpj)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getIdFromCNPJRaw(cnpj: BigInt): BigInt {
    let result = super.call(
      "getIdFromCNPJRaw",
      "getIdFromCNPJRaw(uint64):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(cnpj)]
    );

    return result[0].toBigInt();
  }

  try_getIdFromCNPJRaw(cnpj: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getIdFromCNPJRaw",
      "getIdFromCNPJRaw(uint64):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(cnpj)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCNPJbyID(Id: BigInt): BigInt {
    let result = super.call("getCNPJbyID", "getCNPJbyID(uint256):(uint64)", [
      ethereum.Value.fromUnsignedBigInt(Id)
    ]);

    return result[0].toBigInt();
  }

  try_getCNPJbyID(Id: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getCNPJbyID", "getCNPJbyID(uint256):(uint64)", [
      ethereum.Value.fromUnsignedBigInt(Id)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCNPJbyIDRaw(Id: BigInt): BigInt {
    let result = super.call(
      "getCNPJbyIDRaw",
      "getCNPJbyIDRaw(uint256):(uint64)",
      [ethereum.Value.fromUnsignedBigInt(Id)]
    );

    return result[0].toBigInt();
  }

  try_getCNPJbyIDRaw(Id: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCNPJbyIDRaw",
      "getCNPJbyIDRaw(uint256):(uint64)",
      [ethereum.Value.fromUnsignedBigInt(Id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCNPJ(addr: Address): BigInt {
    let result = super.call("getCNPJ", "getCNPJ(address):(uint64)", [
      ethereum.Value.fromAddress(addr)
    ]);

    return result[0].toBigInt();
  }

  try_getCNPJ(addr: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getCNPJ", "getCNPJ(address):(uint64)", [
      ethereum.Value.fromAddress(addr)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCNPJRaw(addr: Address): BigInt {
    let result = super.call("getCNPJRaw", "getCNPJRaw(address):(uint64)", [
      ethereum.Value.fromAddress(addr)
    ]);

    return result[0].toBigInt();
  }

  try_getCNPJRaw(addr: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getCNPJRaw", "getCNPJRaw(address):(uint64)", [
      ethereum.Value.fromAddress(addr)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRegistry(addr: Address): Contract__getRegistryResult {
    let result = super.call(
      "getRegistry",
      "getRegistry(address):(uint256,uint64,string,uint256,uint256,bool,uint256,bool)",
      [ethereum.Value.fromAddress(addr)]
    );

    return new Contract__getRegistryResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toString(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBoolean(),
      result[6].toBigInt(),
      result[7].toBoolean()
    );
  }

  try_getRegistry(
    addr: Address
  ): ethereum.CallResult<Contract__getRegistryResult> {
    let result = super.tryCall(
      "getRegistry",
      "getRegistry(address):(uint256,uint64,string,uint256,uint256,bool,uint256,bool)",
      [ethereum.Value.fromAddress(addr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__getRegistryResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toString(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBoolean(),
        value[6].toBigInt(),
        value[7].toBoolean()
      )
    );
  }

  getBlockchainAccounts(RBBId: BigInt): Array<Address> {
    let result = super.call(
      "getBlockchainAccounts",
      "getBlockchainAccounts(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(RBBId)]
    );

    return result[0].toAddressArray();
  }

  try_getBlockchainAccounts(
    RBBId: BigInt
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getBlockchainAccounts",
      "getBlockchainAccounts(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(RBBId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getAccountState(addr: Address): BigInt {
    let result = super.call(
      "getAccountState",
      "getAccountState(address):(int256)",
      [ethereum.Value.fromAddress(addr)]
    );

    return result[0].toBigInt();
  }

  try_getAccountState(addr: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAccountState",
      "getAccountState(address):(int256)",
      [ethereum.Value.fromAddress(addr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAccountRole(addr: Address): BigInt {
    let result = super.call(
      "getAccountRole",
      "getAccountRole(address):(int256)",
      [ethereum.Value.fromAddress(addr)]
    );

    return result[0].toBigInt();
  }

  try_getAccountRole(addr: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAccountRole",
      "getAccountRole(address):(int256)",
      [ethereum.Value.fromAddress(addr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isExpired(addr: Address): boolean {
    let result = super.call("isExpired", "isExpired(address):(bool)", [
      ethereum.Value.fromAddress(addr)
    ]);

    return result[0].toBoolean();
  }

  try_isExpired(addr: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isExpired", "isExpired(address):(bool)", [
      ethereum.Value.fromAddress(addr)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isOwner(addr: Address): boolean {
    let result = super.call("isOwner", "isOwner(address):(bool)", [
      ethereum.Value.fromAddress(addr)
    ]);

    return result[0].toBoolean();
  }

  try_isOwner(addr: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isOwner", "isOwner(address):(bool)", [
      ethereum.Value.fromAddress(addr)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isAvailableAccount(addr: Address): boolean {
    let result = super.call(
      "isAvailableAccount",
      "isAvailableAccount(address):(bool)",
      [ethereum.Value.fromAddress(addr)]
    );

    return result[0].toBoolean();
  }

  try_isAvailableAccount(addr: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isAvailableAccount",
      "isAvailableAccount(address):(bool)",
      [ethereum.Value.fromAddress(addr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isWaitingAccount(addr: Address): boolean {
    let result = super.call(
      "isWaitingAccount",
      "isWaitingAccount(address):(bool)",
      [ethereum.Value.fromAddress(addr)]
    );

    return result[0].toBoolean();
  }

  try_isWaitingAccount(addr: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isWaitingAccount",
      "isWaitingAccount(address):(bool)",
      [ethereum.Value.fromAddress(addr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isValidatedAccount(addr: Address): boolean {
    let result = super.call(
      "isValidatedAccount",
      "isValidatedAccount(address):(bool)",
      [ethereum.Value.fromAddress(addr)]
    );

    return result[0].toBoolean();
  }

  try_isValidatedAccount(addr: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isValidatedAccount",
      "isValidatedAccount(address):(bool)",
      [ethereum.Value.fromAddress(addr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isInvalidated(addr: Address): boolean {
    let result = super.call("isInvalidated", "isInvalidated(address):(bool)", [
      ethereum.Value.fromAddress(addr)
    ]);

    return result[0].toBoolean();
  }

  try_isInvalidated(addr: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isInvalidated",
      "isInvalidated(address):(bool)",
      [ethereum.Value.fromAddress(addr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isTheSameID(a: Address, b: Address): boolean {
    let result = super.call(
      "isTheSameID",
      "isTheSameID(address,address):(bool)",
      [ethereum.Value.fromAddress(a), ethereum.Value.fromAddress(b)]
    );

    return result[0].toBoolean();
  }

  try_isTheSameID(a: Address, b: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTheSameID",
      "isTheSameID(address,address):(bool)",
      [ethereum.Value.fromAddress(a), ethereum.Value.fromAddress(b)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPaused(addr: Address): boolean {
    let result = super.call("isPaused", "isPaused(address):(bool)", [
      ethereum.Value.fromAddress(addr)
    ]);

    return result[0].toBoolean();
  }

  try_isPaused(addr: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPaused", "isPaused(address):(bool)", [
      ethereum.Value.fromAddress(addr)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isAdmin(addr: Address): boolean {
    let result = super.call("isAdmin", "isAdmin(address):(bool)", [
      ethereum.Value.fromAddress(addr)
    ]);

    return result[0].toBoolean();
  }

  try_isAdmin(addr: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isAdmin", "isAdmin(address):(bool)", [
      ethereum.Value.fromAddress(addr)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class SetResponsibleForRegistryPreValidationCall extends ethereum.Call {
  get inputs(): SetResponsibleForRegistryPreValidationCall__Inputs {
    return new SetResponsibleForRegistryPreValidationCall__Inputs(this);
  }

  get outputs(): SetResponsibleForRegistryPreValidationCall__Outputs {
    return new SetResponsibleForRegistryPreValidationCall__Outputs(this);
  }
}

export class SetResponsibleForRegistryPreValidationCall__Inputs {
  _call: SetResponsibleForRegistryPreValidationCall;

  constructor(call: SetResponsibleForRegistryPreValidationCall) {
    this._call = call;
  }

  get rs(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetResponsibleForRegistryPreValidationCall__Outputs {
  _call: SetResponsibleForRegistryPreValidationCall;

  constructor(call: SetResponsibleForRegistryPreValidationCall) {
    this._call = call;
  }
}

export class SetResponsibleForRegistryValidationCall extends ethereum.Call {
  get inputs(): SetResponsibleForRegistryValidationCall__Inputs {
    return new SetResponsibleForRegistryValidationCall__Inputs(this);
  }

  get outputs(): SetResponsibleForRegistryValidationCall__Outputs {
    return new SetResponsibleForRegistryValidationCall__Outputs(this);
  }
}

export class SetResponsibleForRegistryValidationCall__Inputs {
  _call: SetResponsibleForRegistryValidationCall;

  constructor(call: SetResponsibleForRegistryValidationCall) {
    this._call = call;
  }

  get rs(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetResponsibleForRegistryValidationCall__Outputs {
  _call: SetResponsibleForRegistryValidationCall;

  constructor(call: SetResponsibleForRegistryValidationCall) {
    this._call = call;
  }
}

export class SetResponsibleForActingAfterMonitoringCall extends ethereum.Call {
  get inputs(): SetResponsibleForActingAfterMonitoringCall__Inputs {
    return new SetResponsibleForActingAfterMonitoringCall__Inputs(this);
  }

  get outputs(): SetResponsibleForActingAfterMonitoringCall__Outputs {
    return new SetResponsibleForActingAfterMonitoringCall__Outputs(this);
  }
}

export class SetResponsibleForActingAfterMonitoringCall__Inputs {
  _call: SetResponsibleForActingAfterMonitoringCall;

  constructor(call: SetResponsibleForActingAfterMonitoringCall) {
    this._call = call;
  }

  get rs(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetResponsibleForActingAfterMonitoringCall__Outputs {
  _call: SetResponsibleForActingAfterMonitoringCall;

  constructor(call: SetResponsibleForActingAfterMonitoringCall) {
    this._call = call;
  }
}

export class RegistryLegalEntityForRegularAccountsCall extends ethereum.Call {
  get inputs(): RegistryLegalEntityForRegularAccountsCall__Inputs {
    return new RegistryLegalEntityForRegularAccountsCall__Inputs(this);
  }

  get outputs(): RegistryLegalEntityForRegularAccountsCall__Outputs {
    return new RegistryLegalEntityForRegularAccountsCall__Outputs(this);
  }
}

export class RegistryLegalEntityForRegularAccountsCall__Inputs {
  _call: RegistryLegalEntityForRegularAccountsCall;

  constructor(call: RegistryLegalEntityForRegularAccountsCall) {
    this._call = call;
  }

  get cnpj(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RegistryLegalEntityForRegularAccountsCall__Outputs {
  _call: RegistryLegalEntityForRegularAccountsCall;

  constructor(call: RegistryLegalEntityForRegularAccountsCall) {
    this._call = call;
  }
}

export class RegistryLegalEntityCall extends ethereum.Call {
  get inputs(): RegistryLegalEntityCall__Inputs {
    return new RegistryLegalEntityCall__Inputs(this);
  }

  get outputs(): RegistryLegalEntityCall__Outputs {
    return new RegistryLegalEntityCall__Outputs(this);
  }
}

export class RegistryLegalEntityCall__Inputs {
  _call: RegistryLegalEntityCall;

  constructor(call: RegistryLegalEntityCall) {
    this._call = call;
  }

  get CNPJ(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get proofHash(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class RegistryLegalEntityCall__Outputs {
  _call: RegistryLegalEntityCall;

  constructor(call: RegistryLegalEntityCall) {
    this._call = call;
  }
}

export class PreValidateRegistryCall extends ethereum.Call {
  get inputs(): PreValidateRegistryCall__Inputs {
    return new PreValidateRegistryCall__Inputs(this);
  }

  get outputs(): PreValidateRegistryCall__Outputs {
    return new PreValidateRegistryCall__Outputs(this);
  }
}

export class PreValidateRegistryCall__Inputs {
  _call: PreValidateRegistryCall;

  constructor(call: PreValidateRegistryCall) {
    this._call = call;
  }

  get userAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approval(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class PreValidateRegistryCall__Outputs {
  _call: PreValidateRegistryCall;

  constructor(call: PreValidateRegistryCall) {
    this._call = call;
  }
}

export class ValidateRegistrySameOrgCall extends ethereum.Call {
  get inputs(): ValidateRegistrySameOrgCall__Inputs {
    return new ValidateRegistrySameOrgCall__Inputs(this);
  }

  get outputs(): ValidateRegistrySameOrgCall__Outputs {
    return new ValidateRegistrySameOrgCall__Outputs(this);
  }
}

export class ValidateRegistrySameOrgCall__Inputs {
  _call: ValidateRegistrySameOrgCall;

  constructor(call: ValidateRegistrySameOrgCall) {
    this._call = call;
  }

  get userAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ValidateRegistrySameOrgCall__Outputs {
  _call: ValidateRegistrySameOrgCall;

  constructor(call: ValidateRegistrySameOrgCall) {
    this._call = call;
  }
}

export class ValidateRegistryCall extends ethereum.Call {
  get inputs(): ValidateRegistryCall__Inputs {
    return new ValidateRegistryCall__Inputs(this);
  }

  get outputs(): ValidateRegistryCall__Outputs {
    return new ValidateRegistryCall__Outputs(this);
  }
}

export class ValidateRegistryCall__Inputs {
  _call: ValidateRegistryCall;

  constructor(call: ValidateRegistryCall) {
    this._call = call;
  }

  get userAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ValidateRegistryCall__Outputs {
  _call: ValidateRegistryCall;

  constructor(call: ValidateRegistryCall) {
    this._call = call;
  }
}

export class PauseAddressSameOrgCall extends ethereum.Call {
  get inputs(): PauseAddressSameOrgCall__Inputs {
    return new PauseAddressSameOrgCall__Inputs(this);
  }

  get outputs(): PauseAddressSameOrgCall__Outputs {
    return new PauseAddressSameOrgCall__Outputs(this);
  }
}

export class PauseAddressSameOrgCall__Inputs {
  _call: PauseAddressSameOrgCall;

  constructor(call: PauseAddressSameOrgCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class PauseAddressSameOrgCall__Outputs {
  _call: PauseAddressSameOrgCall;

  constructor(call: PauseAddressSameOrgCall) {
    this._call = call;
  }
}

export class PauseAddressAfterMonitoringCall extends ethereum.Call {
  get inputs(): PauseAddressAfterMonitoringCall__Inputs {
    return new PauseAddressAfterMonitoringCall__Inputs(this);
  }

  get outputs(): PauseAddressAfterMonitoringCall__Outputs {
    return new PauseAddressAfterMonitoringCall__Outputs(this);
  }
}

export class PauseAddressAfterMonitoringCall__Inputs {
  _call: PauseAddressAfterMonitoringCall;

  constructor(call: PauseAddressAfterMonitoringCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class PauseAddressAfterMonitoringCall__Outputs {
  _call: PauseAddressAfterMonitoringCall;

  constructor(call: PauseAddressAfterMonitoringCall) {
    this._call = call;
  }
}

export class PauseLegalEntitySameOrgCall extends ethereum.Call {
  get inputs(): PauseLegalEntitySameOrgCall__Inputs {
    return new PauseLegalEntitySameOrgCall__Inputs(this);
  }

  get outputs(): PauseLegalEntitySameOrgCall__Outputs {
    return new PauseLegalEntitySameOrgCall__Outputs(this);
  }
}

export class PauseLegalEntitySameOrgCall__Inputs {
  _call: PauseLegalEntitySameOrgCall;

  constructor(call: PauseLegalEntitySameOrgCall) {
    this._call = call;
  }
}

export class PauseLegalEntitySameOrgCall__Outputs {
  _call: PauseLegalEntitySameOrgCall;

  constructor(call: PauseLegalEntitySameOrgCall) {
    this._call = call;
  }
}

export class PauseLegalEntityAfterMonitoringCall extends ethereum.Call {
  get inputs(): PauseLegalEntityAfterMonitoringCall__Inputs {
    return new PauseLegalEntityAfterMonitoringCall__Inputs(this);
  }

  get outputs(): PauseLegalEntityAfterMonitoringCall__Outputs {
    return new PauseLegalEntityAfterMonitoringCall__Outputs(this);
  }
}

export class PauseLegalEntityAfterMonitoringCall__Inputs {
  _call: PauseLegalEntityAfterMonitoringCall;

  constructor(call: PauseLegalEntityAfterMonitoringCall) {
    this._call = call;
  }

  get RBBId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class PauseLegalEntityAfterMonitoringCall__Outputs {
  _call: PauseLegalEntityAfterMonitoringCall;

  constructor(call: PauseLegalEntityAfterMonitoringCall) {
    this._call = call;
  }
}

export class UnpauseAddressSameOrgCall extends ethereum.Call {
  get inputs(): UnpauseAddressSameOrgCall__Inputs {
    return new UnpauseAddressSameOrgCall__Inputs(this);
  }

  get outputs(): UnpauseAddressSameOrgCall__Outputs {
    return new UnpauseAddressSameOrgCall__Outputs(this);
  }
}

export class UnpauseAddressSameOrgCall__Inputs {
  _call: UnpauseAddressSameOrgCall;

  constructor(call: UnpauseAddressSameOrgCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnpauseAddressSameOrgCall__Outputs {
  _call: UnpauseAddressSameOrgCall;

  constructor(call: UnpauseAddressSameOrgCall) {
    this._call = call;
  }
}

export class UnpauseAddressAfterMonitoringCall extends ethereum.Call {
  get inputs(): UnpauseAddressAfterMonitoringCall__Inputs {
    return new UnpauseAddressAfterMonitoringCall__Inputs(this);
  }

  get outputs(): UnpauseAddressAfterMonitoringCall__Outputs {
    return new UnpauseAddressAfterMonitoringCall__Outputs(this);
  }
}

export class UnpauseAddressAfterMonitoringCall__Inputs {
  _call: UnpauseAddressAfterMonitoringCall;

  constructor(call: UnpauseAddressAfterMonitoringCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnpauseAddressAfterMonitoringCall__Outputs {
  _call: UnpauseAddressAfterMonitoringCall;

  constructor(call: UnpauseAddressAfterMonitoringCall) {
    this._call = call;
  }
}

export class InvalidateYourOwnAddressCall extends ethereum.Call {
  get inputs(): InvalidateYourOwnAddressCall__Inputs {
    return new InvalidateYourOwnAddressCall__Inputs(this);
  }

  get outputs(): InvalidateYourOwnAddressCall__Outputs {
    return new InvalidateYourOwnAddressCall__Outputs(this);
  }
}

export class InvalidateYourOwnAddressCall__Inputs {
  _call: InvalidateYourOwnAddressCall;

  constructor(call: InvalidateYourOwnAddressCall) {
    this._call = call;
  }
}

export class InvalidateYourOwnAddressCall__Outputs {
  _call: InvalidateYourOwnAddressCall;

  constructor(call: InvalidateYourOwnAddressCall) {
    this._call = call;
  }
}

export class InvalidateAddressSameOrgCall extends ethereum.Call {
  get inputs(): InvalidateAddressSameOrgCall__Inputs {
    return new InvalidateAddressSameOrgCall__Inputs(this);
  }

  get outputs(): InvalidateAddressSameOrgCall__Outputs {
    return new InvalidateAddressSameOrgCall__Outputs(this);
  }
}

export class InvalidateAddressSameOrgCall__Inputs {
  _call: InvalidateAddressSameOrgCall;

  constructor(call: InvalidateAddressSameOrgCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InvalidateAddressSameOrgCall__Outputs {
  _call: InvalidateAddressSameOrgCall;

  constructor(call: InvalidateAddressSameOrgCall) {
    this._call = call;
  }
}

export class InvalidateAddressCall extends ethereum.Call {
  get inputs(): InvalidateAddressCall__Inputs {
    return new InvalidateAddressCall__Inputs(this);
  }

  get outputs(): InvalidateAddressCall__Outputs {
    return new InvalidateAddressCall__Outputs(this);
  }
}

export class InvalidateAddressCall__Inputs {
  _call: InvalidateAddressCall;

  constructor(call: InvalidateAddressCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InvalidateAddressCall__Outputs {
  _call: InvalidateAddressCall;

  constructor(call: InvalidateAddressCall) {
    this._call = call;
  }
}

export class InvalidateAddressAfterMonitoringCall extends ethereum.Call {
  get inputs(): InvalidateAddressAfterMonitoringCall__Inputs {
    return new InvalidateAddressAfterMonitoringCall__Inputs(this);
  }

  get outputs(): InvalidateAddressAfterMonitoringCall__Outputs {
    return new InvalidateAddressAfterMonitoringCall__Outputs(this);
  }
}

export class InvalidateAddressAfterMonitoringCall__Inputs {
  _call: InvalidateAddressAfterMonitoringCall;

  constructor(call: InvalidateAddressAfterMonitoringCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InvalidateAddressAfterMonitoringCall__Outputs {
  _call: InvalidateAddressAfterMonitoringCall;

  constructor(call: InvalidateAddressAfterMonitoringCall) {
    this._call = call;
  }
}

export class RevalidateForRegularAccountsCall extends ethereum.Call {
  get inputs(): RevalidateForRegularAccountsCall__Inputs {
    return new RevalidateForRegularAccountsCall__Inputs(this);
  }

  get outputs(): RevalidateForRegularAccountsCall__Outputs {
    return new RevalidateForRegularAccountsCall__Outputs(this);
  }
}

export class RevalidateForRegularAccountsCall__Inputs {
  _call: RevalidateForRegularAccountsCall;

  constructor(call: RevalidateForRegularAccountsCall) {
    this._call = call;
  }
}

export class RevalidateForRegularAccountsCall__Outputs {
  _call: RevalidateForRegularAccountsCall;

  constructor(call: RevalidateForRegularAccountsCall) {
    this._call = call;
  }
}

export class RevalidateAccountCall extends ethereum.Call {
  get inputs(): RevalidateAccountCall__Inputs {
    return new RevalidateAccountCall__Inputs(this);
  }

  get outputs(): RevalidateAccountCall__Outputs {
    return new RevalidateAccountCall__Outputs(this);
  }
}

export class RevalidateAccountCall__Inputs {
  _call: RevalidateAccountCall;

  constructor(call: RevalidateAccountCall) {
    this._call = call;
  }

  get hashProof(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class RevalidateAccountCall__Outputs {
  _call: RevalidateAccountCall;

  constructor(call: RevalidateAccountCall) {
    this._call = call;
  }
}

export class SetDefaultDeltaDateTimeExpirationCall extends ethereum.Call {
  get inputs(): SetDefaultDeltaDateTimeExpirationCall__Inputs {
    return new SetDefaultDeltaDateTimeExpirationCall__Inputs(this);
  }

  get outputs(): SetDefaultDeltaDateTimeExpirationCall__Outputs {
    return new SetDefaultDeltaDateTimeExpirationCall__Outputs(this);
  }
}

export class SetDefaultDeltaDateTimeExpirationCall__Inputs {
  _call: SetDefaultDeltaDateTimeExpirationCall;

  constructor(call: SetDefaultDeltaDateTimeExpirationCall) {
    this._call = call;
  }

  get deltaDateTimeExpirationNew(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDefaultDeltaDateTimeExpirationCall__Outputs {
  _call: SetDefaultDeltaDateTimeExpirationCall;

  constructor(call: SetDefaultDeltaDateTimeExpirationCall) {
    this._call = call;
  }
}
